name: "SparseNet"

layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.0039215684
    mean_file: "/raid/dylan/mnist/mnist_mean.binaryproto"
  }
  data_param {
    source: "/raid/dylan/mnist/mnist_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}

layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.0039215684
    mean_file: "/raid/dylan/mnist/mnist_mean.binaryproto"
  }
  data_param {
    source: "/raid/dylan/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}

layer {
  name: "encode"
  type: "SparseApprox"
  bottom: "data"
  top: "encode"
  param {
    name: "phi"
    lr_mult: 1
    decay_mult: 1
  }
  param { 
    name: "bias"
    lr_mult: 1
    decay_mult: 0
  }
  sparse_approx_param {
    num_elements: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    num_iterations: 20
    lambda: 0.01
    eta: 0.1
    gamma: 0
  }
}

layer {
  name: "decode"
  type: "InnerProduct"
  bottom: "encode"
  top: "decode"
  param {
    name: "phi"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "bias"
    lr_mult: 1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 784 
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "flatdata"
  type: "Flatten"
  bottom: "data"
  top: "flatdata"
}

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "flatdata"
  bottom: "decode"
  top: "l2_error"
  loss_weight: 1
}
